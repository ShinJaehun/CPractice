미션 1-1

하노이의 탑을 나타내는 기둥 구조체를 완성하고,
원판의 개수를 입력받아 각 기둥 구조체를 초기화하여 
첫 번째 기둥에 모든 원판을 넣은 후 각 기둥에 들어있는 원판을 모두 출력하는 프로그램을 작성하세요.
원판의 출력은 반드시 함수로 작성하세요.
(단, 하나의 기둥 당 원판의 개수는 최대 50개로 합니다.) 
탐구과제 설명 E-Book을 보고 다음 코드의 빈 부분을 완성한 다음,
“미션1-1.c”로 저장하고 압축 파일에 포함하여 업로드하세요. 

입력
5

출력
0: 5 4 3 2 1
1: x
2: x


미션 1-2

미션1-1의 코드에 사용자로부터 명령을 입력받아 원판을 한 기둥에서 다른 기둥으로 옮기는 함수를 추가하고,
main 함수에서 원판을 초기화한 후 입력받아 직접 원판을 옮겨볼 수 있도록 하세요.
원판을 옮길 때는 규칙에 맞는지 검사하고, 규칙에 맞지 않으면 원판을 옮기지 않고 0을 반환해야 합니다.
규칙에 맞으면 원판을 옮긴 후 1을 반환합니다.
3, 4, 5 등 없는 기둥 번호를 입력받으면 프로그램을 종료해야 합니다.

원판을 움직이는 명령의 입력 형식은 공백으로 분리된 두 개의 기둥 번호를 입력합니다.
예를 들어, 0번 기둥의 맨 위에 있는 원판을 1번 기둥으로 옮길 때는 ‘0 1’을 입력합니다.
탐구과제 설명 E-Book을 보고 다음 코드의 빈 부분을 완성한 다음, 미션1-1.c에 추가하고,
“미션1-2.c”로 저장한 후 압축 파일에 포함하여 업로드하세요. 


입력
5
출력
0: 5 4 3 2 1
1: x
2: x

입력
0 1
출력
0: 5 4 3 2
1: 1
2: x

입력
3 3 


미션 1-3

0번 기둥으로부터 2번 기둥으로 모든 원판이 옮겨진 것을 감지하는 함수를 만들고,
모든 원판이 옮겨졌다면 이동 횟수를 출력한 후 프로그램을 종료하도록 하세요.
탐구과제 설명 E-Book을 보고 다음 코드의 빈 부분을 완성한 다음, 미션1-2.c에 추가하고,
“미션1-3.c”로 저장한 후 압축 파일에 포함하여 업로드하세요. 


입력
2
출력
0: 2 1
1: x
2: x

입력
0 1
출력
0: 2
1: 1
2: x

입력
0 2
출력
0: x
1: 1
2: 2

입력
1 2
출력
0: x
1: x
2: 2 1
3


미션 2

원판 개수와 옮길 기둥 번호를 입력받아 하노이의 탑을 해결하고,
처음 상태와 최종 상태, 옮긴 횟수를 출력하는 프로그램을 작성하세요.
첫 줄에는 원판의 개수를, 두 번째 줄에는 옮길 기둥의 번호를 입력합니다.
탐구과제 설명 E-Book을 보고 코드를 작성한 후, “미션2.c”로 저장한 후 압축 파일에 포함하여 업로드하세요. 


입력
5
2

출력
0: 5 4 3 2 1
1: x
2: x
0: x
1: x
2: 5 4 3 2 131

미션3

다음 필수 조건과 추가 조건을 만족하는 프로그램을 작성하여
“미션3.c”로 저장한 후 압축 파일에 포함하여 업로드하세요.
필수 조건은 반드시 구현하여야 하며, 선택 조건은 선택하여 구현하세요.
또한, 도전미션은 설명서를 작성하여야 합니다.
다음 장에 프로그램 소개, 기능, 구현 방법 및 알고리즘, 추가한 기능 등을 포함한 설명서를 작성하세요.

<필수 조건>

1. 하노이의 탑을 해결하는 움직임과 중간 과정을 모두 출력한다.
예를 들어 0번 기둥에서 1번 기둥으로 5번 원판을 옮긴다면, ‘0→1 (원판 5)’와 같이 표현할 수 있다. 
예시일 뿐이므로, 다른 방법을 사용할 것을 권장한다.

2. 미션1에서와 같이 사용자가 직접 원판을 움직일 수 있는 모드와,
 미션2와 같이 재귀 알고리즘으로 문제가 해결되는 모드를 모두 포함하여라.

3. (입력) 원판의 개수와 옮길 기둥, 모드 선택을 입력받아야 한다.

4. (출력) 마지막에는 총 이동 횟수를 출력하여야 한다.

<추가 조건>

1. 하노이의 탑이 해결되는 과정을 분명하게 확인할 수 있는 추가 기능

2. 기타 창의적인 기능을 포함하여라.

원판의 개수를 입력하세요: 2
옮길 기둥 번호를 입력하세요: 2 
직접 실행은 1번, 자동 실행은 2번을 입력하세요: 2
0: 2 1
1: x
2: x
(시작)
0: 2
1: 1
2: x
(0→1: 원판1)
0: x
1: 1
2: 2
(0→2: 원판2)
0: x
1: x
2: 2 1(1→2: 원판1)총 3번 이동하였습니다.


